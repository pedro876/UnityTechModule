Shader "TechModule/Unlit"
{
    Properties
    {
        _Color ("Fog Color", Color) = (1,0,0,1)
    }
    SubShader
    {
        Tags 
        {
            "RenderType" = "Opaque"
            "IgnoreProjector" = "True"
            "UniversalMaterialType" = "Unlit"
            "RenderPipeline" = "UniversalPipeline"
            "Queue"="Geometry"
        }

        Pass
        {
            Name "Universal Forward"

            Cull Back
            ZTest LEqual
	        ZWrite On

            HLSLPROGRAM
            #pragma vertex vert
            #pragma fragment frag

            #pragma multi_compile_fog

            #include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"

            CBUFFER_START(UnityPerMaterial)
            half4 _Color;
            CBUFFER_END


            struct Attributes
            {
                float4 positionOS : POSITION;
            };

            struct Varyings
            {
                float4 positionHCS : SV_POSITION;
                float fogCoord : TEXCOORD1;
            };

            Varyings vert (Attributes input)
            {
                Varyings output;
                output.positionHCS = TransformObjectToHClip(input.positionOS.xyz);
                output.fogCoord = ComputeFogFactor(output.positionHCS.z);
                return output;
            }
            
            half4 frag (Varyings input) : SV_Target
            {
                half4 outColor = _Color;
                outColor.rgb = MixFog(outColor.rgb, input.fogCoord);
                return outColor;
            }
            ENDHLSL
        }
    }
}
